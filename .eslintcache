[{"D:\\code\\VSCode\\money-book-ts\\src\\components\\calendar\\index.tsx":"1","D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\index.tsx":"2","D:\\code\\VSCode\\money-book-ts\\src\\components\\calendar\\style.tsx":"3","D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-list\\index.tsx":"4","D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-item\\index.tsx":"5","D:\\code\\VSCode\\money-book-ts\\src\\components\\empty-data\\index.tsx":"6","D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-item\\style.tsx":"7","D:\\code\\VSCode\\money-book-ts\\src\\libs\\utils.tsx":"8","D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-list\\style.tsx":"9"},{"size":735,"mtime":1610631415980,"results":"10","hashOfConfig":"11"},{"size":1116,"mtime":1610633025762,"results":"12","hashOfConfig":"11"},{"size":262,"mtime":1610631540560,"results":"13","hashOfConfig":"11"},{"size":962,"mtime":1610634726344,"results":"14","hashOfConfig":"11"},{"size":2107,"mtime":1610634770787,"results":"15","hashOfConfig":"11"},{"size":454,"mtime":1610630459888,"results":"16","hashOfConfig":"11"},{"size":1389,"mtime":1610634637524,"results":"17","hashOfConfig":"11"},{"size":1544,"mtime":1610635096395,"results":"18","hashOfConfig":"11"},{"size":630,"mtime":1610634740241,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"rforv6",{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\code\\VSCode\\money-book-ts\\src\\components\\calendar\\index.tsx",[],"D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\index.tsx",["40"],"import {Fragment, useCallback, useState} from 'react'\r\n\r\nimport {IAccount} from '@/libs/models'\r\nimport {getYearAndMonth} from '@/libs/utils'\r\nimport {categories, items} from '@/libs/localStorage'\r\n\r\nimport Calendar from '@/components/calendar'\r\nimport EmptyData from '@/components/empty-data'\r\nimport PriceList from './c-cpns/price-list'\r\n\r\ninterface IProps {\r\n  message: string\r\n}\r\n\r\nconst AccountList = ({message}: IProps) => {\r\n  const [accountList, setAccountList] = useState<IAccount[]>(items)\r\n  const [dateString, setDateString] = useState<string>(getYearAndMonth('month'))\r\n\r\n  const onChangeDate = useCallback((date: string) => {\r\n    setDateString(date)\r\n  }, [])\r\n\r\n  const onDeleteItem = (item: IAccount): void => {}\r\n\r\n  return (\r\n    <Fragment>\r\n      <Calendar date={dateString} onChangeDate={onChangeDate} />\r\n      {accountList.length ? (\r\n        <PriceList\r\n          categories={categories}\r\n          items={items}\r\n          onDeleteItem={(item: IAccount) => onDeleteItem(item)}\r\n        />\r\n      ) : (\r\n        <EmptyData />\r\n      )}\r\n    </Fragment>\r\n  )\r\n}\r\n\r\nexport default AccountList\r\n","D:\\code\\VSCode\\money-book-ts\\src\\components\\calendar\\style.tsx",[],"D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-list\\index.tsx",[],"D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-item\\index.tsx",["41"],"import {IAccount, ICategory} from '@/libs/models'\r\nimport {toThousandFilter} from '@/libs/utils'\r\n\r\nimport Icon from '@/components/Icon'\r\nimport {PriceItemWrapper} from './style'\r\n\r\ninterface IProps {\r\n  categories: ICategory[]\r\n  time: string\r\n  list: IAccount[]\r\n  onDeleteItem: (item: IAccount) => void\r\n}\r\n\r\nconst PriceItem = ({categories, time, list, onDeleteItem}: IProps) => {\r\n  return (\r\n    <PriceItemWrapper className={'priceItem-wrapper'}>\r\n      <h3 className={'priceItem-header'}>\r\n        <span className={'priceItem-header-time'}>{time}</span>\r\n        <span\r\n          className={`priceItem-header-price ${\r\n            total > 0 ? 'profit' : 'deficit'\r\n          }`}\r\n        >\r\n          {total > 0 ? '+' + toThousandFilter(total) : toThousandFilter(total)}\r\n        </span>\r\n      </h3>\r\n      <ul className={'priceItem-list'}>\r\n        {list.map((item, index) => {\r\n          return (\r\n            <li\r\n              key={item.id}\r\n              className={`priceItem-item ${\r\n                isClick && current === index ? 'active' : ''\r\n              }`}\r\n              onTouchStart={(e) => this.onTouchStart(e)}\r\n              onTouchEnd={(e) => this.onTouchEnd(e, index)}\r\n              onClick={(e) => this.onLiClick(e)}\r\n            >\r\n              <div className={`priceItem-item-content`}>\r\n                <span>\r\n                  <Icon name={categoriesFlattern[item.cid].iconName} />\r\n                  <span>{item.name}</span>\r\n                </span>\r\n                <span>\r\n                  {(categoriesFlattern[item.cid].type === 'outcome'\r\n                    ? '-'\r\n                    : '+') + toThousandFilter(item.price)}\r\n                </span>\r\n              </div>\r\n              <div\r\n                className={`priceItem-item-del`}\r\n                onClick={() =>\r\n                  confirm('确定要删除该条记录吗？', () => onDeleteItem(item))\r\n                }\r\n              >\r\n                删除\r\n              </div>\r\n            </li>\r\n          )\r\n        })}\r\n      </ul>\r\n    </PriceItemWrapper>\r\n  )\r\n}\r\n\r\nexport default PriceItem\r\n","D:\\code\\VSCode\\money-book-ts\\src\\components\\empty-data\\index.tsx",[],"D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-item\\style.tsx",[],"D:\\code\\VSCode\\money-book-ts\\src\\libs\\utils.tsx",["42"],"D:\\code\\VSCode\\money-book-ts\\src\\pages\\account-list\\c-cpns\\price-list\\style.tsx",[],{"ruleId":"43","severity":1,"message":"44","line":16,"column":23,"nodeType":"45","messageId":"46","endLine":16,"endColumn":37},{"ruleId":"47","severity":2,"message":"48","line":53,"column":19,"nodeType":"45","messageId":"49","endLine":53,"endColumn":26},{"ruleId":null,"fatal":true,"severity":2,"message":"50","line":58,"column":22},"@typescript-eslint/no-unused-vars","'setAccountList' is assigned a value but never used.","Identifier","unusedVar","no-restricted-globals","Unexpected use of 'confirm'.","defaultMessage","Parsing error: ',' expected."]